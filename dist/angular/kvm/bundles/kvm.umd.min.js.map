{"version":3,"sources":["../../../../src/angular/projects/kvm/src/lib/kvm.component.ts","../../../../src/angular/projects/kvm/src/lib/kvm.component.html","../../../../src/angular/projects/kvm/src/lib/kvm.module.ts"],"names":["KvmComponent","params","_this","this","width","height","deviceState","deviceStatus","EventEmitter","deviceConnection","selectedEncoding","powerState","deviceId","selected","server","mouseMove","encodings","value","viewValue","urlConstructor","replace","onConnectionStateChange","redirector","state","emit","reset","module","dataProcessor","instantiate","stopKvm","stop","keyboardHelper","UnGrabKeyInput","mpsServer","includes","prototype","ngOnInit","logger","ConsoleLogger","subscribe","data","init","onEncodingChange","ngAfterViewInit","context","_a","canvas","nativeElement","getContext","AMTKvmDataRedirector","Protocol","KVM","FileReader","authToken","AMTDesktop","DataProcessor","mouseHelper","MouseHelper","KeyBoardHelper","onProcessData","processData","bind","onStart","start","onNewState","onStateChange","onSendKvmData","onStateChanged","onError","onRedirectorError","onSend","send","bpp","fromEvent","_b","pipe","throttleTime","event","mousemove","setTimeout","autoConnect","WebSocket","GrabKeyInput","timer","checkPowerStatus","powerstate","onMouseup","mouseup","onMousedown","mousedown","onMousemove","ngOnDestroy","i0","ɵɵdirectiveInject","selectors","viewQuery","rf","ctx","i0.ɵɵelementStart","i0.ɵɵlistener","$event","i0.ɵɵelementEnd","i0.ɵɵadvance","i0.ɵɵproperty","Component","selector","templateUrl","styleUrls","Inject","ViewChild","static","Input","Output","KvmModule","forRoot","param","ngModule","providers","provide","useValue","HttpClientModule","FlexLayoutModule","BrowserModule","BrowserAnimationsModule","declarations","imports","exports","NgModule","schemas","CUSTOM_ELEMENTS_SCHEMA"],"mappings":"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","sourcesContent":["import {\r\n  AfterViewInit,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Inject,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  ViewChild\r\n} from '@angular/core'\r\nimport {\r\n  AMTDesktop,\r\n  AMTKvmDataRedirector,\r\n  ConsoleLogger,\r\n  DataProcessor,\r\n  IDataProcessor,\r\n  ILogger,\r\n  KeyBoardHelper,\r\n  MouseHelper,\r\n  Protocol\r\n} from '@open-amt-cloud-toolkit/ui-toolkit/core'\r\nimport { fromEvent, timer } from 'rxjs'\r\nimport { throttleTime } from 'rxjs/operators'\r\n\r\n@Component({\r\n  selector: 'amt-kvm',\r\n  templateUrl: './kvm.component.html',\r\n  styleUrls: ['./kvm.component.css']\r\n})\r\nexport class KvmComponent implements OnInit, AfterViewInit, OnDestroy {\r\n  @ViewChild('canvas', { static: false }) canvas: ElementRef | undefined\r\n  public context!: CanvasRenderingContext2D\r\n\r\n  // //setting a width and height for the canvas\r\n\r\n  @Input() public width = 400\r\n  @Input() public height = 400\r\n  @Output() deviceState: number = 0\r\n  @Output() deviceStatus: EventEmitter<number> = new EventEmitter<number>()\r\n  @Input() deviceConnection: EventEmitter<boolean> = new EventEmitter<boolean>()\r\n  @Input() selectedEncoding: EventEmitter<number> = new EventEmitter<number>()\r\n  module: any\r\n  redirector: any\r\n  dataProcessor!: IDataProcessor | null\r\n  mouseHelper!: MouseHelper\r\n  keyboardHelper!: KeyBoardHelper\r\n  logger!: ILogger\r\n  powerState: any = 0\r\n  deviceId: string = ''\r\n  selected: number = 1\r\n  timeInterval!: any\r\n  server: string = ''\r\n  mouseMove: any = null\r\n  mpsServer: boolean\r\n  encodings = [\r\n    { value: 1, viewValue: 'RLE 8' },\r\n    { value: 2, viewValue: 'RLE 16' }\r\n  ]\r\n\r\n  constructor (@Inject('userInput') public params) {\r\n    this.deviceId = this.params.deviceId\r\n    this.server = `${this.urlConstructor()}/relay`\r\n    this.mpsServer = this.params.server.includes('/mps')\r\n    if (this.mpsServer) {\r\n      // handles kong route\r\n      this.server = `${this.urlConstructor()}/ws/relay`\r\n    }\r\n  }\r\n\r\n  urlConstructor = (): string => {\r\n    return this.params.server.replace('http', 'ws')\r\n  }\r\n\r\n  ngOnInit (): void {\r\n    this.logger = new ConsoleLogger(1)\r\n    this.deviceConnection.subscribe((data: boolean) => {\r\n      if (data) {\r\n        this.init()\r\n      } else {\r\n        this.stopKvm()\r\n      }\r\n    })\r\n    this.selectedEncoding.subscribe((data) => {\r\n      this.selected = data\r\n      this.onEncodingChange()\r\n    })\r\n  }\r\n\r\n  ngAfterViewInit (): void {\r\n    this.init()\r\n  }\r\n\r\n  instantiate (): void {\r\n    this.context = this.canvas?.nativeElement.getContext('2d')\r\n    this.redirector = new AMTKvmDataRedirector(\r\n      this.logger,\r\n      Protocol.KVM,\r\n      new FileReader(),\r\n      this.deviceId,\r\n      16994,\r\n      '',\r\n      '',\r\n      0,\r\n      0,\r\n      this.params.authToken,\r\n      this.server\r\n    )\r\n    this.module = new AMTDesktop(this.logger as any, this.context)\r\n    this.dataProcessor = new DataProcessor(\r\n      this.logger,\r\n      this.redirector,\r\n      this.module\r\n    )\r\n    this.mouseHelper = new MouseHelper(this.module, this.redirector, 200)\r\n    this.keyboardHelper = new KeyBoardHelper(this.module, this.redirector)\r\n\r\n    this.redirector.onProcessData = this.module.processData.bind(this.module)\r\n    this.redirector.onStart = this.module.start.bind(this.module)\r\n    this.redirector.onNewState = this.module.onStateChange.bind(this.module)\r\n    this.redirector.onSendKvmData = this.module.onSendKvmData.bind(this.module)\r\n    this.redirector.onStateChanged = this.onConnectionStateChange.bind(this)\r\n    this.redirector.onError = this.onRedirectorError.bind(this)\r\n    this.module.onSend = this.redirector.send.bind(this.redirector)\r\n    this.module.onProcessData = this.dataProcessor.processData.bind(\r\n      this.dataProcessor\r\n    )\r\n    this.module.bpp = this.selected\r\n    this.mouseMove = fromEvent(this.canvas?.nativeElement, 'mousemove')\r\n    this.mouseMove.pipe(throttleTime(200)).subscribe((event: any) => {\r\n      if (this.mouseHelper != null) {\r\n        this.mouseHelper.mousemove(event)\r\n      }\r\n    })\r\n  }\r\n\r\n  onConnectionStateChange = (redirector: any, state: number): any => {\r\n    this.deviceState = state\r\n    this.deviceStatus.emit(state)\r\n  }\r\n\r\n  onRedirectorError (): void {\r\n    this.reset()\r\n  }\r\n\r\n  init (): void {\r\n    this.instantiate()\r\n    setTimeout(() => {\r\n      this.autoConnect()\r\n    }, 4000)\r\n  }\r\n\r\n  autoConnect (): void {\r\n    if (this.redirector != null) {\r\n      this.redirector.start(WebSocket)\r\n      this.keyboardHelper.GrabKeyInput()\r\n    }\r\n  }\r\n\r\n  onEncodingChange (): void {\r\n    this.stopKvm()\r\n    timer(1000).subscribe(() => {\r\n      this.autoConnect()\r\n    })\r\n  }\r\n\r\n  checkPowerStatus (): boolean {\r\n    return this.powerState.powerstate === 2\r\n  }\r\n\r\n  reset = (): void => {\r\n    this.redirector = null\r\n    this.module = null\r\n    this.dataProcessor = null\r\n    this.height = 400\r\n    this.width = 400\r\n    this.instantiate()\r\n  }\r\n\r\n  stopKvm = (): void => {\r\n    this.redirector.stop()\r\n    this.keyboardHelper.UnGrabKeyInput()\r\n    this.reset()\r\n  }\r\n\r\n  onMouseup (event: MouseEvent): void {\r\n    if (this.mouseHelper != null) {\r\n      this.mouseHelper.mouseup(event)\r\n    }\r\n  }\r\n\r\n  onMousedown (event: MouseEvent): void {\r\n    if (this.mouseHelper != null) {\r\n      this.mouseHelper.mousedown(event)\r\n    }\r\n  }\r\n\r\n  onMousemove (event: MouseEvent): void {\r\n    if (this.mouseHelper != null) {\r\n      this.mouseHelper.mousemove(event)\r\n    }\r\n  }\r\n\r\n  ngOnDestroy (): void {\r\n    this.stopKvm()\r\n  }\r\n}\r\n","<div>\r\n  <canvas\r\n    class=\"canvas\"\r\n    #canvas\r\n    [width]=\"width\"\r\n    [height]=\"height\"\r\n    oncontextmenu=\"return false\"\r\n    (mouseup)=\"onMouseup($event)\"\r\n    (mousedown)=\"onMousedown($event)\"\r\n    (mousemove)=\"onMousemove($event)\"\r\n  ></canvas>\r\n</div>\r\n","import {\r\n  NgModule,\r\n  CUSTOM_ELEMENTS_SCHEMA,\r\n  ModuleWithProviders\r\n} from '@angular/core'\r\nimport { BrowserModule } from '@angular/platform-browser'\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\r\nimport { FlexLayoutModule } from '@angular/flex-layout'\r\nimport { KvmComponent } from './kvm.component'\r\nimport { HttpClientModule } from '@angular/common/http'\r\n@NgModule({\r\n  declarations: [KvmComponent],\r\n  imports: [\r\n    HttpClientModule,\r\n    FlexLayoutModule,\r\n    BrowserModule,\r\n    BrowserAnimationsModule\r\n  ],\r\n  exports: [KvmComponent],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n\r\n})\r\nexport class KvmModule {\r\n  public static forRoot (param: any): ModuleWithProviders<KvmModule> {\r\n    return {\r\n      ngModule: KvmModule,\r\n      providers: [\r\n        {\r\n          provide: 'userInput',\r\n          useValue: param\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}\r\n"]}