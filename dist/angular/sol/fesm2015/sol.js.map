{"version":3,"file":"sol.js","sources":["../../../../src/angular/projects/sol/src/lib/sol.component.ts","../../../../src/angular/projects/sol/src/lib/sol.component.html","../../../../src/angular/projects/sol/src/lib/sol.module.ts","../../../../src/angular/projects/sol/src/public-api.ts","../../../../src/angular/projects/sol/src/sol.ts"],"sourcesContent":["import { Component, EventEmitter, Inject, OnInit, Output, ViewEncapsulation, OnDestroy, Input, AfterViewInit } from '@angular/core'\nimport { Terminal } from 'xterm'\nimport { AmtTerminal, AMTRedirector, TerminalDataProcessor, ConsoleLogger, Protocol, LogLevel } from '@open-amt-cloud-toolkit/ui-toolkit/core'\nimport { ActivatedRoute } from '@angular/router'\nimport { C, V, SPACE } from '@angular/cdk/keycodes'\n\n@Component({\n  selector: 'amt-sol',\n  templateUrl: './sol.component.html',\n  styleUrls: ['./sol.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class SolComponent implements OnInit, OnDestroy, AfterViewInit {\n  uuid: string = ''\n  terminal: any\n  container!: any\n  term: any\n  redirector: any\n  dataProcessor: any\n  token: any\n  server: string = ''\n  mpsServer: boolean\n  logger: ConsoleLogger = new ConsoleLogger(LogLevel.ERROR)\n  @Output() deviceStatus: EventEmitter<number> = new EventEmitter<number>()\n  @Input() deviceConnection: EventEmitter<boolean> = new EventEmitter<boolean>()\n\n  constructor (@Inject('userInput') public params, private readonly activatedRoute: ActivatedRoute) {\n    this.token = localStorage.getItem('loggedInUser')\n    this.server = `${this.urlConstructor()}/relay`\n    this.mpsServer = this.params.mpsServer.includes('/mps')\n    if (this.mpsServer) {\n      this.server = `${this.urlConstructor()}/ws/relay`\n    }\n  }\n\n  urlConstructor (): string {\n    return this.params.mpsServer.replace('http', 'ws')\n  }\n\n  ngOnInit (): void {\n    this.activatedRoute.params.subscribe(params => {\n      this.uuid = params.id\n    })\n    this.deviceConnection.subscribe((data: boolean) => {\n      if (data) {\n        this.init()\n      } else {\n        this.stopSol()\n      }\n    })\n  }\n\n  ngAfterViewInit (): void {\n    this.init()\n  }\n\n  init (): void {\n    this.instantiate()\n    setTimeout(() => {\n      this.startSol()\n    }, 4000)\n  }\n\n  instantiate (): void {\n    this.terminal = new AmtTerminal()\n    this.dataProcessor = new TerminalDataProcessor(this.terminal)\n    this.redirector = new AMTRedirector(this.logger, Protocol.SOL, new FileReader(), this.uuid, 16994, '', '', 0, 0, JSON.parse(this.token).token, this.server)\n    this.terminal.onSend = this.redirector.send.bind(this.redirector)\n    this.redirector.onNewState = this.terminal.StateChange.bind(this.terminal)\n    this.redirector.onStateChanged = this.onTerminalStateChange.bind(this)\n    this.redirector.onProcessData = this.dataProcessor.processData.bind(this)\n    this.dataProcessor.processDataToXterm = this.handleWriteToXterm.bind(this)\n    this.dataProcessor.clearTerminal = this.handleClearTerminal.bind(this)\n    this.container = document.getElementById('terminal')\n    this.term = new Terminal({\n      rows: 30,\n      cols: 100,\n      cursorStyle: 'block',\n      fontWeight: 'bold'\n    })\n    this.term.open(this.container)\n    this.term.onData((data: any) => {\n      this.handleKeyPress(data)\n    })\n    this.term.attachCustomKeyEventHandler((e: any) => {\n      e.stopPropagation()\n      e.preventDefault()\n      if (e.ctrlKey === true && e.shiftKey === true && e.keyCode === C) {\n        return navigator.clipboard.writeText(this.term.getSelection())\n      } else if (e.ctrlKey === true && e.shiftKey === true && e.keyCode === V) {\n        return navigator.clipboard.readText().then(text => {\n          this.handleKeyPress(text)\n        })\n      } else if (e.code === SPACE) {\n        return this.handleKeyPress(e.key)\n      }\n    })\n  }\n\n  handleKeyPress (domEvent: any): void {\n    this.terminal.TermSendKeys(domEvent)\n  }\n\n  handleClearTerminal (): void {\n    this.term.reset()\n  }\n\n  handleWriteToXterm (str: string): void {\n    this.term.write(str)\n  }\n\n  onTerminalStateChange (redirector: AMTRedirector, state: number): void {\n    this.deviceStatus.emit(state)\n  }\n\n  startSol (): void {\n    if (this.redirector !== null) {\n      this.redirector.start(WebSocket)\n    }\n  }\n\n  stopSol (): void {\n    if (this.redirector !== null) {\n      this.redirector.stop()\n      this.handleClearTerminal()\n      this.term.dispose()\n      this.cleanup()\n    }\n  }\n\n  cleanup (): void {\n    this.terminal = null\n    this.redirector = null\n    this.dataProcessor = null\n    this.term = null\n  }\n\n  ngOnDestroy (): void {\n    this.stopSol()\n  }\n}\n","<div class=\"container\">\r\n    <div id=\"terminal\" class=\"xtermDisplay\" style=\"width: fit-content;\"></div>\r\n</div>","import { CUSTOM_ELEMENTS_SCHEMA, ModuleWithProviders, NgModule } from '@angular/core'\nimport { SolComponent } from './sol.component'\nimport { BrowserModule } from '@angular/platform-browser'\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\nimport { FlexLayoutModule } from '@angular/flex-layout'\nimport { HttpClientModule } from '@angular/common/http'\n\n@NgModule({\n  declarations: [\n    SolComponent\n  ],\n  imports: [\n    HttpClientModule,\n    FlexLayoutModule,\n    BrowserModule,\n    BrowserAnimationsModule\n  ],\n  exports: [\n    SolComponent\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class SolModule {\n  public static forRoot (param: any): ModuleWithProviders<SolModule> {\n    return {\n      ngModule: SolModule,\n      providers: [\n        {\n          provide: 'userInput',\n          useValue: param\n        }\n      ]\n    }\n  }\n}\n","/*\r\n * Public API Surface of sol\r\n */\r\n\r\nexport * from './lib/sol.component'\r\nexport * from './lib/sol.module'\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i0.ɵɵelementStart","i0.ɵɵelement","i0.ɵɵelementEnd"],"mappings":"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"}